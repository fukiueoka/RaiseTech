AWSTemplateFormatVersion: "2010-09-09"

Description: EC2,RDS,ALB and S3 for lecture10

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Environment Setting
        Parameters:
          - ProjectName
      - Label:
          default: Amazon EC2 Config
        Parameters:
          - KeyName
      - Label:
          default: RDS Config
        Parameters:
          - TestDBEngineName
          - TestMySQLMajorVersion
          - TestMySQLMinorVersion
          - TestDBInstanceClass
          - TestDBEngineStorageSize
          - TestDBEngineStorageType
          - TestDBName
          - TestDBUserName
          - TestDBpassword

Parameters:
## Environment Settong ## 
  ProjectName:
    Type: String
    Description: project name
    Default: lecture10
## EC2 Config ##
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

## RDS Config ##
# RDS name
  TestDBEngineName:
    Description: Input DB Engine Name
    Type: String
    Default: mysql

# RDS version    
  TestMySQLMajorVersion:
    Description: Input DB Engine Version
    Type: String
    Default: 8.0
  TestMySQLMinorVersion:
    Description: Input DB Engine Version
    Type: String
    Default: 36

# Instnce Options 
  TestDBInstanceClass:
    Type: String
    Default: "db.t3.micro" 
  TestDBEngineStorageSize:
    Type: String
    Default: "20"
  TestDBEngineStorageType:
    Type: String
    Default: "gp2"

# DB name
  TestDBName:
    Description: DB Name
    Type: String
    Default: lec10database

# RDS user options
  TestDBUserName:
    Description: RDS Maseter User Name
    Type: String
    Default: admin
  
  TestDBpassword:
    Description: RDS Password 
    Type: String
    NoEcho: true
    MinLength: 8
   
Resources:
# ------------------------------------------------------------#
# EC2 Instance
# ------------------------------------------------------------#     
 TestEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-01d078c099c7f1261   #AMIのID(AMIカタログ参照)
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"  
          DeviceIndex: "0"       #パブリックIPを自動で割り振り
          SubnetId: !ImportValue PubSubAID
          GroupSet: 
            - !ImportValue EC2SGID   #別テンプレで設定したセキュリティグループを指定
      BlockDeviceMappings:       #ストレージの設定
        - DeviceName: /dev/xvda  #デバイス名
          Ebs:
            VolumeType: gp2
            VolumeSize: 8
            DeleteOnTermination: true 
      IamInstanceProfile: !Ref S3AccessInstanceProfile  #S3に関するIAMロールを付与
      # ----ユーザーデータ（構築後に実行するコマンド）-------------#
      UserData: !Base64 |
        #!/bin/bash -ex
        sudo yum update -y
        sudo yum install git -y
        sudo yum install mysql -y
     # -----ユーザーデータ　ここまで----------------------------#
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ec2-CFn 

# ------------------------------------------------------------ # 
# RDS
# ------------------------------------------------------------ # 
## DB - Engine ##
 TestDBEngine:
    Type: AWS::RDS::DBInstance
    Properties: 
      DBInstanceIdentifier: !Sub ${ProjectName}-rds-CFn 
      Engine: !Ref TestDBEngineName
      EngineVersion: !Sub ${TestMySQLMajorVersion}.${TestMySQLMinorVersion}
      DBInstanceClass: !Ref TestDBInstanceClass
      AvailabilityZone: !Select 
      - 0
      - Fn::GetAZs: !Ref AWS::Region
      AllocatedStorage: !Ref TestDBEngineStorageSize
      StorageType: !Ref TestDBEngineStorageType
      DBName: !Ref TestDBName
      MasterUsername: !Ref TestDBUserName
      MasterUserPassword: !Ref TestDBpassword
      DBSubnetGroupName: !Ref TestDBSubnetGroup
      PubliclyAccessible: false
      MultiAZ: false
      AutoMinorVersionUpgrade: false
      DBParameterGroupName: !Ref TestDBParameterGroup  
      VPCSecurityGroups:
        - !ImportValue RDSSGID       #別テンプレで設定したセキュリティグループを指定
      BackupRetentionPeriod: 7
      Tags: 
        - Key: "Name"
          Value: !Sub ${ProjectName}-rds-CFn 

## DB - SubnetGroup ##
 TestDBSubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupName: !Sub ${ProjectName}-db-subnetgruop-CFn
      DBSubnetGroupDescription: TestDBSubnetGroup
      SubnetIds: 
        - !ImportValue PriSubAID
        - !ImportValue PriSubCID
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-db-subnetgruop-CFn

## DB - ParameterGroup ##
 TestDBParameterGroup:
    Type: "AWS::RDS::DBParameterGroup"
    Properties:
      DBParameterGroupName: !Sub ${ProjectName}-db-parametergroup-CFn
      Description: MySQL Parameter Group
      Family: !Sub MySQL${TestMySQLMajorVersion}
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-db-parametergroup-CFn

# ------------------------------------------------------------#
# ALB 
# ------------------------------------------------------------#  
## ALB - LoadBalancer ##
 TestALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: TestALB
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4
      SecurityGroups: 
        - !ImportValue ALBSGID        #別テンプレで設定したセキュリティグループを指定
      Subnets: 
        - !ImportValue PubSubAID
        - !ImportValue PubSubCID
      Tags: 
        - Key: Name
          Value: !Sub ${ProjectName}-alb-CFn

## ALB - TargetGroup ##
 TestTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${ProjectName}-alb-tg-CFn
      VpcId: !ImportValue VPCID
      IpAddressType: ipv4
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Port: 80
      TargetType: instance
      Targets: 
      - Id: !Ref TestEC2Instance
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Matcher: 
        HttpCode: 200
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName}-alb-tg-CFn

## ALB - Listener ##
 TestListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref TestALB
      Port: 80
      Protocol: "HTTP"
      DefaultActions: 
      - Type: "forward"
        TargetGroupArn: !Ref TestTargetGroup

# ------------------------------------------------------------#
# S3 (EC2にアクセス権限付与)
# ------------------------------------------------------------# 
## S3 - Bucket ##
 TestS3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub ${ProjectName}-s3-bucket-cfn
      PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256

## IAM Policy ##
 TestS3AccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-s3acsecc-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource: 
              - !Sub arn:aws:s3:::${TestS3Bucket}
              - !Sub arn:aws:s3:::${TestS3Bucket}/*

## IAM Role ##
 TestS3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-ec2-role
      Path: /
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: 
              - "ec2.amazonaws.com"  
          Action: 
            - "sts:AssumeRole"
      ManagedPolicyArns: 
        - !Ref TestS3AccessPolicy

## IAM InstanceProflie ##
 S3AccessInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${ProjectName}-instanceprofile
      Path: "/"
      Roles:
      - !Ref TestS3AccessRole

# ------------------------------------------------------------#
# Outputs
# ------------------------------------------------------------# 
Outputs:
 ALBDNSName:
    Description: DNS Name of ALB
    Value:  !GetAtt TestALB.DNSName

 RDSEndpoint:
    Description: Endpoint of RDSinstance
    Value:  !GetAtt TestDBEngine.Endpoint.Address
    